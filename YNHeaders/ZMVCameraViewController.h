//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "UIImagePickerControllerDelegate.h"
#import "UINavigationControllerDelegate.h"
#import "ZMVAVPlayerDelegate.h"
#import "ZMVCameraOutput.h"
#import "ZMVProgressViewDelegate.h"

@class NSString, UIButton, UIImageView, UILongPressGestureRecognizer, UITapGestureRecognizer, UIView, ZMVAVPlayer, ZMVCamera, ZMVMovieTranscoder, ZMVProgressView;

@interface ZMVCameraViewController : UIViewController <ZMVCameraOutput, UIImagePickerControllerDelegate, UINavigationControllerDelegate, ZMVAVPlayerDelegate, ZMVProgressViewDelegate>
{
    ZMVCamera *_camera;
    NSString *_realName;
    ZMVMovieTranscoder *_transcoder;
    _Bool writerVideo;
    _Bool isShoot;
    _Bool maxTimePlay;
    _Bool minTimePlay;
    UITapGestureRecognizer *doubleTapRecognizer;
    UITapGestureRecognizer *tap;
    UILongPressGestureRecognizer *longPressReger;
    NSString *imagePath;
    double iphoneXHeight;
    _Bool repeatPhoto;
    _Bool canBtnEnd;
    _Bool _onlyPhoto;
    _Bool _isFocus;
    _Bool _hiddenFC;
    id <ZMVCameraViewControllerDelegate> _delegate;
    ZMVAVPlayer *_player;
    UIImageView *_photoImageView;
    UIView *_photoView;
    UIView *_previewView;
    UIButton *_switchBtn;
    UIButton *_cancelBtn;
    UIButton *_confirmBtn;
    ZMVProgressView *_progressView;
    UIImageView *_imgRecord;
    UIButton *_returnBtn;
    UIImageView *_focusCursor;
}

- (void).cxx_destruct;
- (void)avplayerView:(id)arg1 bufferDuration:(double)arg2;
- (void)avplayerView:(id)arg1 didStart:(_Bool)arg2 avplayerDuration:(double)arg3;
- (void)avplayerView:(id)arg1 isPlayback:(_Bool)arg2;
- (void)backgroundNotify:(id)arg1;
- (void)camera:(id)arg1 adjustingFocus:(_Bool)arg2 focusPoint:(struct CGPoint)arg3;
@property(retain, nonatomic) UIButton *cancelBtn; // @synthesize cancelBtn=_cancelBtn;
- (void)cancelBtnMethod;
@property(retain, nonatomic) UIButton *confirmBtn; // @synthesize confirmBtn=_confirmBtn;
- (void)confirmBtnMethod;
- (void)dealloc;
@property(nonatomic) __weak id <ZMVCameraViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)didReceiveMemoryWarning;
- (void)doubleTappedOnVideo:(id)arg1;
- (void)endRecord;
@property(retain, nonatomic) UIImageView *focusCursor; // @synthesize focusCursor=_focusCursor;
- (void)handleLongPress:(id)arg1;
@property(nonatomic) _Bool hiddenFC; // @synthesize hiddenFC=_hiddenFC;
@property(retain, nonatomic) UIImageView *imgRecord; // @synthesize imgRecord=_imgRecord;
@property(nonatomic) _Bool isFocus; // @synthesize isFocus=_isFocus;
- (void)maxTimeWithZMVProgressView:(id)arg1;
- (void)onHiddenFocusCurSorAction;
@property(nonatomic) _Bool onlyPhoto; // @synthesize onlyPhoto=_onlyPhoto;
- (void)photoCameraComplete;
@property(retain, nonatomic) UIImageView *photoImageView; // @synthesize photoImageView=_photoImageView;
@property(retain, nonatomic) UIView *photoView; // @synthesize photoView=_photoView;
- (void)pinchView:(id)arg1;
- (_Bool)playVideo;
@property(retain, nonatomic) ZMVAVPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) UIView *previewView; // @synthesize previewView=_previewView;
@property(retain, nonatomic) ZMVProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) UIButton *returnBtn; // @synthesize returnBtn=_returnBtn;
- (void)returnBtnMethod;
- (void)setFocusCursorWithPoint:(struct CGPoint)arg1;
@property(retain, nonatomic) UIButton *switchBtn; // @synthesize switchBtn=_switchBtn;
- (void)setVideoInfo:(unsigned long long)arg1 andheight:(unsigned long long)arg2;
- (void)singleTappedOnVideo:(id)arg1;
- (void)switchBtnMethod;
- (void)takePhotoAction;
- (void)videoCameraComplete;
- (void)viewDidLoad;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)zmvProgressView:(id)arg1 currentTime:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

