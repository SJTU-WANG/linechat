//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "GCDAsyncSocketDelegate.h"
#import "GCDAsyncUdpSocketDelegate.h"

@class GCDAsyncSocket, GCDAsyncUdpSocket, GCDMulticastDelegate<YNStreamDelegate>, NSData, NSDate, NSMutableArray, NSMutableData, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString, XMPPJID;

@interface YNStream : NSObject <GCDAsyncSocketDelegate, GCDAsyncUdpSocketDelegate>
{
    NSObject<OS_dispatch_queue> *xmppQueue;
    void *xmppQueueTag;
    NSObject<OS_dispatch_queue> *_udpQueue;
    NSObject<OS_dispatch_queue> *didReceiveIqQueue;
    NSObject<OS_dispatch_source> *connectTimer;
    NSObject<OS_dispatch_source> *_udpHeartbeatTimer;
    long long _udpTimeInterval;
    GCDMulticastDelegate<YNStreamDelegate> *multicastDelegate;
    int state;
    GCDAsyncSocket *asyncSocket;
    GCDAsyncUdpSocket *_udpSocket;
    unsigned long long numberOfBytesSent;
    unsigned long long numberOfBytesReceived;
    unsigned char flags;
    unsigned char config;
    NSString *hostName;
    unsigned short hostPort;
    _Bool autoStartTLS;
    NSDate *authenticationDate;
    XMPPJID *myJID_setByClient;
    XMPPJID *myJID_setByServer;
    XMPPJID *remoteJID;
    double keepAliveInterval;
    NSObject<OS_dispatch_source> *keepAliveTimer;
    double lastSendReceiveTime;
    NSData *keepAliveData;
    _Bool _hasSentFirstPing;
    double _lastPingReceivedTime;
    NSMutableArray *registeredModules;
    NSMutableDictionary *autoDelegateDict;
    id userTag;
    id _tag;
    NSMutableData *_socketData;
}

+ (id)generateUUID;
- (void).cxx_destruct;
- (void)addDelegate:(id)arg1 delegateQueue:(id)arg2;
- (_Bool)authenticateWithPassword:(id)arg1 error:(id *)arg2;
- (id)authenticationDate;
@property _Bool autoStartTLS;
- (void)commonInit;
- (int)connectState;
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 withTimeout:(double)arg3 error:(id *)arg4;
- (_Bool)connectWithTimeout:(double)arg1 error:(id *)arg2;
- (void)consumeData:(id)arg1;
- (void)dealloc;
- (id)decryptWithAESWithData:(id)arg1;
- (void)didReceiveAuthResponseData:(id)arg1;
- (void)didReceiveLogoutResponseData:(id)arg1;
- (void)didReceiveMessageData:(id)arg1;
- (void)disconnect;
- (void)disconnectAfterSending;
- (void)doConnectTimeout;
@property _Bool enableBackgroundingOnSocket;
- (id)encryptDataWithAES:(id)arg1;
- (void)endConnectTimeout;
- (void)failToSendMessage:(id)arg1 error:(id)arg2;
- (id)generateMid;
- (id)generatePingMid;
- (id)generateUUID;
@property(copy) NSString *hostName;
@property unsigned short hostPort;
- (id)init;
- (_Bool)isAuthenticated;
- (_Bool)isAuthenticating;
- (_Bool)isConnected;
- (_Bool)isConnecting;
- (_Bool)isDisconnected;
- (_Bool)isP2P;
- (_Bool)isSecure;
- (void)keepAlive;
@property double keepAliveInterval;
@property(copy) XMPPJID *myJID;
@property(readonly) unsigned long long numberOfBytesReceived;
@property(readonly) unsigned long long numberOfBytesSent;
- (_Bool)oldSchoolSecureConnectWithTimeout:(double)arg1 error:(id *)arg2;
@property(readonly) XMPPJID *remoteJID;
- (void)removeDelegate:(id)arg1;
- (void)removeDelegate:(id)arg1 delegateQueue:(id)arg2;
@property _Bool resetByteCountPerConnection;
- (void)sendAuthWithToken:(id)arg1;
- (void)sendLogoutData;
- (void)sendLogoutMessage;
- (void)sendMessage:(id)arg1;
- (void)sendMessage:(id)arg1 withTag:(long long)arg2;
- (void)sendPingData;
- (void)sendReplyForMessage:(id)arg1;
- (void)sendUDPHeartbeat;
- (void)setIsAuthenticated:(_Bool)arg1;
- (void)setIsSecure:(_Bool)arg1;
- (void)setMyJID_setByClient:(id)arg1;
- (void)setMyJID_setByServer:(id)arg1;
@property(retain, nonatomic) NSMutableData *socketData; // @synthesize socketData=_socketData;
@property(retain) id tag; // @synthesize tag=_tag;
- (void)setupKeepAliveTimer;
- (void)socket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
- (void)socket:(id)arg1 didReadData:(id)arg2 withTag:(long long)arg3;
- (void)socket:(id)arg1 didWriteDataWithTag:(long long)arg2;
- (void)socketDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)socketDidSecure:(id)arg1;
- (void)startConnectTimeout:(double)arg1;
- (void)startUDPHeartbeat:(long long)arg1;
@property(readonly) int state;
- (void)stopUDPHeartbeat;
@property(readonly, nonatomic) GCDAsyncUdpSocket *udpSocket;
- (void)udpSocket:(id)arg1 didSendDataWithTag:(long long)arg2;
@property(readonly) NSObject<OS_dispatch_queue> *xmppQueue; // @synthesize xmppQueue;
@property(readonly) void *xmppQueueTag; // @synthesize xmppQueueTag;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

