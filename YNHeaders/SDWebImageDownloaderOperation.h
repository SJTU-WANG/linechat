//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSOperation.h"

#import "NSURLConnectionDataDelegate.h"
#import "SDWebImageOperation.h"

@class NSArray, NSMutableData, NSString, NSThread, NSURL, NSURLConnection, NSURLCredential, NSURLRequest, NSURLResponse;

@interface SDWebImageDownloaderOperation : NSOperation <NSURLConnectionDataDelegate, SDWebImageOperation>
{
    unsigned long long width;
    unsigned long long height;
    long long orientation;
    _Bool responseFromCached;
    NSArray *_ipList;
    NSString *_url;
    NSURL *_originURL;
    NSString *_currentUrl;
    long long _currentIpIndex;
    _Bool _hasTriedAllIpList;
    _Bool _executing;
    _Bool _finished;
    _Bool _shouldDecompressImages;
    _Bool _shouldUseCredentialStorage;
    NSURLRequest *_request;
    NSURLCredential *_credential;
    unsigned long long _options;
    long long _expectedSize;
    NSURLResponse *_response;
    CDUnknownBlockType _progressBlock;
    CDUnknownBlockType _completedBlock;
    CDUnknownBlockType _cancelBlock;
    NSMutableData *_imageData;
    NSURLConnection *_connection;
    NSThread *_thread;
    unsigned long long _backgroundTaskId;
}

+ (void)load;
+ (long long)orientationFromPropertyValue:(long long)arg1;
- (void).cxx_destruct;
@property(nonatomic) unsigned long long backgroundTaskId; // @synthesize backgroundTaskId=_backgroundTaskId;
- (void)cancel;
@property(copy, nonatomic) CDUnknownBlockType cancelBlock; // @synthesize cancelBlock=_cancelBlock;
- (void)cancelInternal;
- (void)cancelInternalAndStop;
- (void)checkForHttpDNSUpdateWithError:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType completedBlock; // @synthesize completedBlock=_completedBlock;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (_Bool)connectionShouldUseCredentialStorage:(id)arg1;
@property(retain, nonatomic) NSURLCredential *credential; // @synthesize credential=_credential;
- (void)done;
@property(nonatomic) long long expectedSize; // @synthesize expectedSize=_expectedSize;
- (id)getReplacedUrlWithIpIndex:(long long)arg1;
@property(retain, nonatomic) NSMutableData *imageData; // @synthesize imageData=_imageData;
- (id)initWithRequest:(id)arg1 options:(unsigned long long)arg2 progress:(CDUnknownBlockType)arg3 completed:(CDUnknownBlockType)arg4 cancelled:(CDUnknownBlockType)arg5;
- (_Bool)isConcurrent;
@property(nonatomic, getter=isExecuting) _Bool executing; // @synthesize executing=_executing;
@property(nonatomic, getter=isFinished) _Bool finished; // @synthesize finished=_finished;
@property(readonly, nonatomic) unsigned long long options; // @synthesize options=_options;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(readonly, nonatomic) NSURLRequest *request; // @synthesize request=_request;
- (void)reset;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
- (_Bool)retryWithError:(id)arg1;
- (id)scaledImageForKey:(id)arg1 image:(id)arg2;
@property(nonatomic) _Bool shouldDecompressImages; // @synthesize shouldDecompressImages=_shouldDecompressImages;
@property(nonatomic) _Bool shouldUseCredentialStorage; // @synthesize shouldUseCredentialStorage=_shouldUseCredentialStorage;
@property(retain) NSThread *thread; // @synthesize thread=_thread;
- (_Bool)shouldContinueWhenAppEntersBackground;
- (void)start;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

