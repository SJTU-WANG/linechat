//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@interface YNMessageStorage : NSObject
{
}

+ (void)activateChatConversationWithOwnerId:(id)arg1 active:(_Bool)arg2;
+ (_Bool)checkActiveForConversation:(id)arg1;
+ (id)checkConversationTableNameForBizType:(unsigned long long)arg1;
+ (_Bool)checkMessageIsDuplicate:(id)arg1;
+ (id)checkMessageIsDuplicate:(id)arg1 inDB:(id)arg2;
+ (id)checkMessageTableNameForBizType:(unsigned long long)arg1;
+ (void)clearNewFriendConversationUnreadCountForBizType:(unsigned long long)arg1 sourceType:(unsigned long long)arg2;
+ (id)conversationTableNameForConversation:(id)arg1;
+ (id)conversationTableNameForMessage:(id)arg1;
+ (void)createOrUpdateConversationCollectionForMessage:(id)arg1 isNewMessage:(_Bool)arg2 conversation:(id)arg3 type:(unsigned long long)arg4 inDB:(id)arg5 error:(id *)arg6;
+ (id)createOrUpdateConversationForMessage:(id)arg1 isNewMessage:(_Bool)arg2 inDB:(id)arg3 error:(id *)arg4;
+ (id)createTempConversation:(id)arg1;
+ (void)deleteAllMessagesForConversation:(id)arg1;
+ (void)deleteAllMessagesForConversation:(id)arg1 inDB:(id)arg2;
+ (void)deleteBatchMessages:(id)arg1;
+ (void)deleteChatConversationAndClearMessages:(id)arg1;
+ (_Bool)deleteChatConversationAndClearMessages:(id)arg1 inDB:(id)arg2;
+ (void)deleteChatMessage:(id)arg1 inDB:(id)arg2;
+ (_Bool)deleteConversation:(id)arg1 inDB:(id)arg2;
+ (void)deleteMessage:(id)arg1;
+ (id)fetchBizTableList;
+ (id)fetchConversationByOwnerId:(id)arg1;
+ (id)fetchConversationByOwnerId:(id)arg1 inDB:(id)arg2;
+ (id)fetchConversationByTableName:(id)arg1 ConversationType:(unsigned long long)arg2 inDB:(id)arg3;
+ (id)fetchConversationInfoWithOwnerId:(id)arg1;
+ (id)fetchLastMessageForConversation:(id)arg1;
+ (id)fetchLastMessageForConversation:(id)arg1 inDB:(id)arg2;
+ (id)fetchLatestPopedPopupMessageWithPageIndex:(id)arg1 inDB:(id)arg2;
+ (id)fetchLatestPopupMessageWithPageIndex:(id)arg1;
+ (id)fetchLatestPopupMessageWithPageIndex:(id)arg1 inDB:(id)arg2;
+ (id)fetchMessageByMessageId:(id)arg1;
+ (id)fetchMessageByTableName:(id)arg1 serverId:(id)arg2 inDB:(id)arg3;
+ (id)fetchMessageByVoipRoomId:(id)arg1;
+ (id)fetchNewFriendConversationByOwnerId:(id)arg1;
+ (id)fetchNewFriendConversationByOwnerId:(id)arg1 inDB:(id)arg2;
+ (id)fetchResourceCachedMessages;
+ (long long)fetchTotalUnreadWithCollectionType:(unsigned long long)arg1;
+ (id)fetchUncompletedMessages;
+ (long long)fetchUnreadConverstionsCountForBizType:(unsigned long long)arg1;
+ (long long)fetchUnreadSystemConverstionsCountForBizType:(unsigned long long)arg1;
+ (void)fillRelatedInfoForMessage:(id)arg1 inDB:(id)arg2;
+ (id)handleNewBatchMessagesInsert:(id)arg1 duplicateMessageIds:(id *)arg2 error:(id *)arg3;
+ (id)handleNewBatchMessagesInsertAndVersionUpdate:(id)arg1 duplicateMessageIds:(id *)arg2 error:(id *)arg3;
+ (id)handleNewMessageInsert:(id)arg1 isDuplicate:(_Bool *)arg2 error:(id *)arg3;
+ (id)handleNewMessageInsertAndVersionUpdate:(id)arg1 isDuplicate:(_Bool *)arg2 isVersionValid:(_Bool *)arg3 error:(id *)arg4;
+ (long long)insertChatConversation:(id)arg1 inDB:(id)arg2;
+ (long long)insertChatMessage:(id)arg1 inDB:(id)arg2;
+ (long long)insertPopupMessage:(id)arg1 inDB:(id)arg2;
+ (void)load;
+ (id)loadChatConversation:(id)arg1;
+ (id)loadMessagesWithConversation:(id)arg1 withCursor:(id)arg2 pageType:(unsigned long long)arg3 pageSize:(long long)arg4;
+ (id)loadSearchResultMessagesWithConversation:(id)arg1 withCursor:(id)arg2 pageSize:(long long)arg3;
+ (id)loadSubConversationWithCollectionType:(unsigned long long)arg1;
+ (id)loadSubConversationWithCollectionType:(unsigned long long)arg1 inDB:(id)arg2;
+ (id)loadSystemConversationList:(unsigned long long)arg1;
+ (id)loadSystemConversationList:(unsigned long long)arg1 withSourceTypes:(id)arg2;
+ (id)loadSystemConversationListAndActivateWithBizType:(unsigned long long)arg1;
+ (id)loadUnreadSystemConversationListWithBizType:(unsigned long long)arg1;
+ (id)messageTableNameForConversation:(id)arg1;
+ (id)messageTableNameForMessage:(id)arg1;
+ (id)parameterizeChatMessage:(id)arg1;
+ (id)parameterizeConversation:(id)arg1;
+ (id)parameterizeConversationInfo:(id)arg1;
+ (id)parameterizePopupMessage:(id)arg1;
+ (id)queryChatRecordWithString:(id)arg1;
+ (id)queryChatRecordWithString:(id)arg1 withSearchResult:(id)arg2;
+ (id)reloadHistory:(id)arg1 withLimit:(struct _NSRange)arg2;
+ (id)reloadHistory:(id)arg1 withLimit:(struct _NSRange)arg2 withDic:(id)arg3;
+ (id)reloadMediaMessageForConversation:(id)arg1;
+ (id)revokeMessageWithMessage:(id)arg1;
+ (void)saveConversationInfo:(id)arg1;
+ (id)systemConversationTableNameByBizType:(unsigned long long)arg1;
+ (void)updateChatConversation:(id)arg1;
+ (_Bool)updateChatConversation:(id)arg1 inDB:(id)arg2;
+ (void)updateChatConversation:(id)arg1 updateKeys:(id)arg2;
+ (void)updateChatConversation:(id)arg1 withUpdateKeys:(id)arg2 inDB:(id)arg3;
+ (_Bool)updateChatMessage:(id)arg1;
+ (void)updateChatMessage:(id)arg1 byServerId:(id)arg2 inDB:(id)arg3;
+ (void)updateChatMessage:(id)arg1 inDB:(id)arg2;
+ (_Bool)updateChatMessageAndRelatedConversationOptionally:(id)arg1;
+ (void)updateOrCreateConversation:(id)arg1;
+ (void)updateOrCreateConversation:(id)arg1 updateKeys:(id)arg2;
+ (void)updatePopupMessage:(id)arg1;
+ (void)updatePopupMessage:(id)arg1 inDB:(id)arg2;
+ (_Bool)updateRelatedConversationCollectionForType:(unsigned long long)arg1 inDB:(id)arg2;

@end

